# tasks/serializers.py
from rest_framework import serializers
from .models import Task, Category

class CategorySerializer(serializers.ModelSerializer):
    """
    Serializer for the Category model.
    Handles serialization/deserialization of Category objects.
    """
    class Meta:
        model = Category
        fields = '__all__' # Include all fields from the Category model

class TaskSerializer(serializers.ModelSerializer):
    """
    Serializer for the Task model.
    Includes a read-only field for category name for easier display on frontend.
    """
    # category_name is a read-only field that gets its value from the 'name' attribute
    # of the related Category object. This is useful for displaying the category name
    # without needing to fetch the full Category object on the frontend.
    category_name = serializers.CharField(source='category.name', read_only=True)

    class Meta:
        model = Task
        fields = '__all__' # Include all fields from the Task model
        # 'user' is automatically set by the view based on the authenticated user.
        # 'priority_score' and 'ai_suggestions' are generated by the AI module.
        # 'updated_at' is automatically set by Django's auto_now=True.
        read_only_fields = ('user', 'priority_score', 'ai_suggestions', 'updated_at')